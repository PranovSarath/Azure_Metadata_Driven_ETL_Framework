{
	"name": "PL_INGESTION",
	"properties": {
		"activities": [
			{
				"name": "AC_LKP_SP_CreateDataHistoryID",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ETL].[usp_createNewDataLoadHistoryID]",
						"storedProcedureParameters": {
							"DataHistoryDescription": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Description",
									"type": "Expression"
								}
							},
							"DestinationSubjectName": {
								"type": "String",
								"value": {
									"value": "@concat(pipeline().parameters.SubjectName, '_Raw')",
									"type": "Expression"
								}
							},
							"ExecutionStartTime": {
								"type": "DateTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							"ParametersList": {
								"type": "String",
								"value": {
									"value": "@concat('SubjectName: ', pipeline().parameters.SubjectName, ', Description: ', pipeline().parameters.Description)",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"RunID": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"SourceSubjectName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SubjectName",
									"type": "Expression"
								}
							},
							"Status": {
								"type": "String",
								"value": "In Progress"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Az_SQL_ControlDB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "AC_SETVAR_DataHistoryID",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "AC_LKP_SP_CreateDataHistoryID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "DataLoadHistoryID",
					"value": {
						"value": "@activity('AC_LKP_SP_CreateDataHistoryID').output.firstRow.DataLoadHistoryID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "AC_SETVAR_PipelineRunsID",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "AC_LKP_SP_CreateDataHistoryID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineRunID",
					"value": {
						"value": "@activity('AC_LKP_SP_CreateDataHistoryID').output.firstRow.PipelineRunsID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "AC_LKP_SP_IngestEntitiesToRaw",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AC_SETVAR_DataHistoryID",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "AC_SETVAR_PipelineRunsID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ETL].[usp_lookupEntitiesToProcess]",
						"storedProcedureParameters": {
							"DestLayer": {
								"type": "String",
								"value": {
									"value": "Raw",
									"type": "Expression"
								}
							},
							"DestSubject": {
								"type": "String",
								"value": {
									"value": "@concat(pipeline().parameters.SubjectName, '_Raw')",
									"type": "Expression"
								}
							},
							"SourceLayer": {
								"type": "String",
								"value": {
									"value": "Source",
									"type": "Expression"
								}
							},
							"SourceSubject": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SubjectName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Az_SQL_ControlDB",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "AC_ForEach_SourceEntity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "AC_LKP_SP_IngestEntitiesToRaw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('AC_LKP_SP_IngestEntitiesToRaw').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "AC_COPY_Entity_FROM_SRC_TO_RAW",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM ', item().SourceSubject, '.', item().SourceEntityName)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "FlattenHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".csv"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerTable1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_CSV_RawOutput",
									"type": "DatasetReference",
									"parameters": {
										"DataHistoryID": {
											"value": "@variables('DataLoadHistoryID')",
											"type": "Expression"
										},
										"DestLayer": {
											"value": "@item().DestinationLayer",
											"type": "Expression"
										},
										"EntityName": {
											"value": "@item().DestinationEntity",
											"type": "Expression"
										},
										"RootFolderName": {
											"value": "@item().SourceSubject",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "AC_ADB_CleanseSourceEntity",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "AC_COPY_Entity_FROM_SRC_TO_RAW",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/ps521@sussex.ac.uk/databricks/Cleansed/nb_cleanseEntity",
								"baseParameters": {
									"sourceSubjectName": {
										"value": "@item().SourceSubject",
										"type": "Expression"
									},
									"sourceEntityName": {
										"value": "@item().SourceEntityName",
										"type": "Expression"
									},
									"sourceSubjectID": {
										"value": "@string(item().SourceSubjectID)",
										"type": "Expression"
									},
									"sourceEntityID": {
										"value": "@string(item().SourceEntityID)",
										"type": "Expression"
									},
									"targetSubjectName": {
										"value": "@item().DestinationSubject",
										"type": "Expression"
									},
									"targetEntityName": {
										"value": "@item().DestinationEntity",
										"type": "Expression"
									},
									"targetSubjectID": {
										"value": "@string(item().DestinationSubjectID)",
										"type": "Expression"
									},
									"targetEntityID": {
										"value": "@string(item().DestinationEntityID)",
										"type": "Expression"
									},
									"dataHistoryID": {
										"value": "@string(variables('DataLoadHistoryID'))",
										"type": "Expression"
									},
									"IngestionTime": {
										"value": "@string(pipeline().TriggerTime)",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_Az_Databricks",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "AC_LKP_SP_Transform_CleansedEntities",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AC_ForEach_SourceEntity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ETL].[usp_lookupEntitiesToProcess]",
						"storedProcedureParameters": {
							"DestLayer": {
								"type": "String",
								"value": {
									"value": "Transformed",
									"type": "Expression"
								}
							},
							"DestSubject": {
								"type": "String",
								"value": {
									"value": "@concat(pipeline().parameters.SubjectName, '_Trans')",
									"type": "Expression"
								}
							},
							"SourceLayer": {
								"type": "String",
								"value": {
									"value": "Cleansed",
									"type": "Expression"
								}
							},
							"SourceSubject": {
								"type": "String",
								"value": {
									"value": "@concat(pipeline().parameters.SubjectName, '_Cleansed')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Az_SQL_ControlDB",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "AC_ForEach_CleansedEntity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "AC_LKP_SP_Transform_CleansedEntities",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "AC_ADB_CreateOrUpdateDataLoadHistory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('AC_LKP_SP_Transform_CleansedEntities').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "AC_ADB_PreTrans_CleansedEntity",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/ps521@sussex.ac.uk/databricks/Transformed/nb_preTransEntity",
								"baseParameters": {
									"sourceSubjectName": {
										"value": "@item().SourceSubject",
										"type": "Expression"
									},
									"sourceEntityName": {
										"value": "@item().SourceEntityName",
										"type": "Expression"
									},
									"sourceSubjectID": {
										"value": "@string(item().SourceSubjectID)",
										"type": "Expression"
									},
									"sourceEntityID": {
										"value": "@string(item().SourceEntityID)",
										"type": "Expression"
									},
									"targetSubjectName": {
										"value": "@item().DestinationSubject",
										"type": "Expression"
									},
									"targetEntityName": {
										"value": "@item().DestinationEntity",
										"type": "Expression"
									},
									"targetSubjectID": {
										"value": "@string(item().DestinationSubjectID)",
										"type": "Expression"
									},
									"targetEntityID": {
										"value": "@string(item().DestinationEntityID)",
										"type": "Expression"
									},
									"dataHistoryID": {
										"value": "@string(variables('DataLoadHistoryID'))",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_Az_Databricks",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "AC_DataCopy_DataHistoryID",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "AC_IF_Incremental",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT * FROM [config].[DataLoadHistory]', variables('FIlterCondition'))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "DataLoadHistoryID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "DataLoadHistoryID",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "DataLoadName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DataLoadName",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "DataLoadDescription",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "DataLoadDescription",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "SubjectID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "SubjectID",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "Subject",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Subject",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "LastUpdateTime",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "LastUpdateTime",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							},
							{
								"source": {
									"name": "CreatedTime",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CreatedTime",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Az_SQL_ControlDB",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Az_ADLS_Gen2_Parquet_DataLoadHistory",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "AC_IF_Incremental",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "AC_SETVAR_DataHistoryID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.IsIncremental",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "AC_SET_VAR_FilterCondition_Incremental",
							"description": "The variable 'FilterCondition' is set to the exact DataHistoryID if Incremental Load is happening.",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FIlterCondition",
								"value": {
									"value": "@concat(' WHERE [DataLoadHistoryID] = ', string(variables('DataLoadHistoryID')))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "AC_ADB_CreateOrUpdateDataLoadHistory",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "AC_DataCopy_DataHistoryID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/ps521@sussex.ac.uk/databricks/Config/nb_createDataLoadHistoryTable",
					"baseParameters": {
						"IsIncremental": {
							"value": "@string(pipeline().parameters.IsIncremental)",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_Az_Databricks",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SubjectName": {
				"type": "string",
				"defaultValue": "Sales"
			},
			"Description": {
				"type": "string",
				"defaultValue": "First Test of Sales Data Load"
			},
			"IsIncremental": {
				"type": "bool",
				"defaultValue": "False"
			}
		},
		"variables": {
			"DataLoadHistoryID": {
				"type": "Integer"
			},
			"PipelineRunID": {
				"type": "Integer"
			},
			"FIlterCondition": {
				"type": "String"
			}
		},
		"annotations": []
	}
}